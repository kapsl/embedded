   1               		.file	"usart.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	usart_init_roomba
  13               	usart_init_roomba:
  14               	.LFB0:
  15               		.file 1 "usart.c"
   1:usart.c       **** #include "usart.h"
   2:usart.c       **** #include "tools.h"
   3:usart.c       **** 
   4:usart.c       **** void usart_init_roomba() {
  16               		.loc 1 4 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
   5:usart.c       **** 	// Baudrate
   6:usart.c       **** 	UBRR3L = 0x10;
  22               		.loc 1 6 0
  23 0000 80E1      		ldi r24,lo8(16)
  24 0002 8093 3401 		sts 308,r24
   7:usart.c       **** 	UBRR3H = 0x00;
  25               		.loc 1 7 0
  26 0006 1092 3501 		sts 309,__zero_reg__
   8:usart.c       **** 	
   9:usart.c       **** 	// Double speed
  10:usart.c       **** 	UCSR3A |= (1 << U2X3);
  27               		.loc 1 10 0
  28 000a E0E3      		ldi r30,lo8(48)
  29 000c F1E0      		ldi r31,lo8(1)
  30 000e 8081      		ld r24,Z
  31 0010 8260      		ori r24,lo8(2)
  32 0012 8083      		st Z,r24
  11:usart.c       **** 	
  12:usart.c       **** 	// Enable receiver and transmitter
  13:usart.c       **** 	UCSR3B |= (1 << RXEN3) | (1 << TXEN3);
  33               		.loc 1 13 0
  34 0014 E1E3      		ldi r30,lo8(49)
  35 0016 F1E0      		ldi r31,lo8(1)
  36 0018 8081      		ld r24,Z
  37 001a 8861      		ori r24,lo8(24)
  38 001c 8083      		st Z,r24
  14:usart.c       **** 		
  15:usart.c       **** 	// Set character size
  16:usart.c       **** 	UCSR3B &= ~(0 << UCSZ32);
  39               		.loc 1 16 0
  40 001e 8081      		ld r24,Z
  41 0020 8083      		st Z,r24
  17:usart.c       **** 	UCSR3C |= (1 << UCSZ31) | (1 << UCSZ30);
  42               		.loc 1 17 0
  43 0022 E2E3      		ldi r30,lo8(50)
  44 0024 F1E0      		ldi r31,lo8(1)
  45 0026 8081      		ld r24,Z
  46 0028 8660      		ori r24,lo8(6)
  47 002a 8083      		st Z,r24
  18:usart.c       **** 	
  19:usart.c       **** 	// Set ansychronous
  20:usart.c       **** 	UCSR3C &= ~(0 << UMSEL31) & ~(0 << UMSEL30);
  48               		.loc 1 20 0
  49 002c 8081      		ld r24,Z
  50 002e 8083      		st Z,r24
  21:usart.c       **** 	
  22:usart.c       **** 	// No parity
  23:usart.c       **** 	UCSR3C &= ~(0 << UPM31) & ~(0 << UPM30);
  51               		.loc 1 23 0
  52 0030 8081      		ld r24,Z
  53 0032 8083      		st Z,r24
  24:usart.c       **** 	
  25:usart.c       **** 	// 1 Stop bit
  26:usart.c       **** 	UCSR3C &= ~(0 << USBS3);	
  54               		.loc 1 26 0
  55 0034 8081      		ld r24,Z
  56 0036 8083      		st Z,r24
  57 0038 0895      		ret
  58               		.cfi_endproc
  59               	.LFE0:
  61               	.global	send_byte_roomba
  63               	send_byte_roomba:
  64               	.LFB1:
  27:usart.c       **** }
  28:usart.c       **** 
  29:usart.c       **** void send_byte_roomba(uint8_t byte) {	
  65               		.loc 1 29 0
  66               		.cfi_startproc
  67               	.LVL0:
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  30:usart.c       **** 	while (!(UCSR3A & (1 << UDRE3)));
  72               		.loc 1 30 0
  73 003a E0E3      		ldi r30,lo8(48)
  74 003c F1E0      		ldi r31,lo8(1)
  75               	.L4:
  76               		.loc 1 30 0 is_stmt 0 discriminator 1
  77 003e 9081      		ld r25,Z
  78 0040 95FF      		sbrs r25,5
  79 0042 00C0      		rjmp .L4
  31:usart.c       **** 	
  32:usart.c       **** 	UDR3 = byte;
  80               		.loc 1 32 0 is_stmt 1
  81 0044 8093 3601 		sts 310,r24
  82 0048 0895      		ret
  83               		.cfi_endproc
  84               	.LFE1:
  86               	.global	receive_byte_roomba
  88               	receive_byte_roomba:
  89               	.LFB2:
  33:usart.c       **** }
  34:usart.c       **** 
  35:usart.c       **** uint8_t receive_byte_roomba() {
  90               		.loc 1 35 0
  91               		.cfi_startproc
  92               	/* prologue: function */
  93               	/* frame size = 0 */
  94               	/* stack size = 0 */
  95               	.L__stack_usage = 0
  36:usart.c       **** 	while(!(UCSR3A & (1 << RXC3)));
  96               		.loc 1 36 0
  97 004a E0E3      		ldi r30,lo8(48)
  98 004c F1E0      		ldi r31,lo8(1)
  99               	.L7:
 100               		.loc 1 36 0 is_stmt 0 discriminator 1
 101 004e 8081      		ld r24,Z
 102 0050 8823      		tst r24
 103 0052 04F4      		brge .L7
  37:usart.c       **** 	
  38:usart.c       **** 	return UDR3;
 104               		.loc 1 38 0 is_stmt 1
 105 0054 8091 3601 		lds r24,310
  39:usart.c       **** }
 106               		.loc 1 39 0
 107 0058 0895      		ret
 108               		.cfi_endproc
 109               	.LFE2:
 111               	.global	usart_init
 113               	usart_init:
 114               	.LFB3:
  40:usart.c       **** 
  41:usart.c       **** void usart_init() {
 115               		.loc 1 41 0
 116               		.cfi_startproc
 117               	/* prologue: function */
 118               	/* frame size = 0 */
 119               	/* stack size = 0 */
 120               	.L__stack_usage = 0
  42:usart.c       **** 	// Baudrate
  43:usart.c       **** 	UBRR0L = 0x10;
 121               		.loc 1 43 0
 122 005a 80E1      		ldi r24,lo8(16)
 123 005c 8093 C400 		sts 196,r24
  44:usart.c       **** 	UBRR0H = 0x00;
 124               		.loc 1 44 0
 125 0060 1092 C500 		sts 197,__zero_reg__
  45:usart.c       **** 	
  46:usart.c       **** 	// Double speed
  47:usart.c       **** 	UCSR0A |= (1 << U2X0);
 126               		.loc 1 47 0
 127 0064 E0EC      		ldi r30,lo8(-64)
 128 0066 F0E0      		ldi r31,0
 129 0068 8081      		ld r24,Z
 130 006a 8260      		ori r24,lo8(2)
 131 006c 8083      		st Z,r24
  48:usart.c       **** 	
  49:usart.c       **** 	// Enable receiver and transmitter
  50:usart.c       **** 	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
 132               		.loc 1 50 0
 133 006e E1EC      		ldi r30,lo8(-63)
 134 0070 F0E0      		ldi r31,0
 135 0072 8081      		ld r24,Z
 136 0074 8861      		ori r24,lo8(24)
 137 0076 8083      		st Z,r24
  51:usart.c       **** 		
  52:usart.c       **** 	// Set character size
  53:usart.c       **** 	UCSR0B |= (0 << UCSZ02);
 138               		.loc 1 53 0
 139 0078 8081      		ld r24,Z
 140 007a 8083      		st Z,r24
  54:usart.c       **** 	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);
 141               		.loc 1 54 0
 142 007c E2EC      		ldi r30,lo8(-62)
 143 007e F0E0      		ldi r31,0
 144 0080 8081      		ld r24,Z
 145 0082 8660      		ori r24,lo8(6)
 146 0084 8083      		st Z,r24
  55:usart.c       **** 	
  56:usart.c       **** 	// Set ansychronous
  57:usart.c       **** 	UCSR0C |= (0 << UMSEL01) | (0 << UMSEL00);
 147               		.loc 1 57 0
 148 0086 8081      		ld r24,Z
 149 0088 8083      		st Z,r24
  58:usart.c       **** 	
  59:usart.c       **** 	// No parity
  60:usart.c       **** 	UCSR0C |= (0 << UPM01) | (0 << UPM00);
 150               		.loc 1 60 0
 151 008a 8081      		ld r24,Z
 152 008c 8083      		st Z,r24
  61:usart.c       **** 	
  62:usart.c       **** 	// 1 Stop bit
  63:usart.c       **** 	UCSR0C |= (0 << USBS0);	
 153               		.loc 1 63 0
 154 008e 8081      		ld r24,Z
 155 0090 8083      		st Z,r24
 156 0092 0895      		ret
 157               		.cfi_endproc
 158               	.LFE3:
 160               	.global	send_byte
 162               	send_byte:
 163               	.LFB4:
  64:usart.c       **** }
  65:usart.c       **** 
  66:usart.c       **** void send_byte(uint8_t byte) {	
 164               		.loc 1 66 0
 165               		.cfi_startproc
 166               	.LVL1:
 167               	/* prologue: function */
 168               	/* frame size = 0 */
 169               	/* stack size = 0 */
 170               	.L__stack_usage = 0
  67:usart.c       **** 	while (!(UCSR0A & (1 << UDRE0)));
 171               		.loc 1 67 0
 172 0094 E0EC      		ldi r30,lo8(-64)
 173 0096 F0E0      		ldi r31,0
 174               	.L11:
 175               		.loc 1 67 0 is_stmt 0 discriminator 1
 176 0098 9081      		ld r25,Z
 177 009a 95FF      		sbrs r25,5
 178 009c 00C0      		rjmp .L11
  68:usart.c       **** 	
  69:usart.c       **** 	UDR0 = byte;
 179               		.loc 1 69 0 is_stmt 1
 180 009e 8093 C600 		sts 198,r24
 181 00a2 0895      		ret
 182               		.cfi_endproc
 183               	.LFE4:
 185               	.global	receive_byte
 187               	receive_byte:
 188               	.LFB5:
  70:usart.c       **** }
  71:usart.c       **** 
  72:usart.c       **** uint8_t receive_byte() {
 189               		.loc 1 72 0
 190               		.cfi_startproc
 191               	/* prologue: function */
 192               	/* frame size = 0 */
 193               	/* stack size = 0 */
 194               	.L__stack_usage = 0
  73:usart.c       **** 	while(!(UCSR0A & (1 << RXC0)));
 195               		.loc 1 73 0
 196 00a4 E0EC      		ldi r30,lo8(-64)
 197 00a6 F0E0      		ldi r31,0
 198               	.L14:
 199               		.loc 1 73 0 is_stmt 0 discriminator 1
 200 00a8 8081      		ld r24,Z
 201 00aa 8823      		tst r24
 202 00ac 04F4      		brge .L14
  74:usart.c       **** 	
  75:usart.c       **** 	return UDR0;
 203               		.loc 1 75 0 is_stmt 1
 204 00ae 8091 C600 		lds r24,198
  76:usart.c       **** }
 205               		.loc 1 76 0
 206 00b2 0895      		ret
 207               		.cfi_endproc
 208               	.LFE5:
 210               	.global	sendString
 212               	sendString:
 213               	.LFB6:
  77:usart.c       **** 
  78:usart.c       **** /**
  79:usart.c       ****  * \brief Sends a string to the screen terminal
  80:usart.c       ****  * 
  81:usart.c       ****  * \param string the string to write on the output
  82:usart.c       ****  */
  83:usart.c       **** void sendString(char * string) {
 214               		.loc 1 83 0
 215               		.cfi_startproc
 216               	.LVL2:
 217 00b4 1F93      		push r17
 218               	.LCFI0:
 219               		.cfi_def_cfa_offset 4
 220               		.cfi_offset 17, -3
 221 00b6 CF93      		push r28
 222               	.LCFI1:
 223               		.cfi_def_cfa_offset 5
 224               		.cfi_offset 28, -4
 225 00b8 DF93      		push r29
 226               	.LCFI2:
 227               		.cfi_def_cfa_offset 6
 228               		.cfi_offset 29, -5
 229               	/* prologue: function */
 230               	/* frame size = 0 */
 231               	/* stack size = 3 */
 232               	.L__stack_usage = 3
 233 00ba EC01      		movw r28,r24
 234               	.LVL3:
  84:usart.c       **** 	uint8_t a = 0;
  85:usart.c       **** 	
  86:usart.c       **** 	while(string[a] != '\0') {
 235               		.loc 1 86 0
 236 00bc 8881      		ld r24,Y
 237               	.LVL4:
 238 00be 8823      		tst r24
 239 00c0 01F0      		breq .L15
  84:usart.c       **** 	uint8_t a = 0;
 240               		.loc 1 84 0
 241 00c2 10E0      		ldi r17,0
 242               	.LVL5:
 243               	.L17:
  87:usart.c       **** 		send_byte(string[a]);
 244               		.loc 1 87 0
 245 00c4 0E94 0000 		call send_byte
 246               	.LVL6:
  88:usart.c       **** 		
  89:usart.c       **** 		a++;
 247               		.loc 1 89 0
 248 00c8 1F5F      		subi r17,lo8(-(1))
 249               	.LVL7:
  86:usart.c       **** 	while(string[a] != '\0') {
 250               		.loc 1 86 0
 251 00ca FE01      		movw r30,r28
 252 00cc E10F      		add r30,r17
 253 00ce F11D      		adc r31,__zero_reg__
 254 00d0 8081      		ld r24,Z
 255 00d2 8111      		cpse r24,__zero_reg__
 256 00d4 00C0      		rjmp .L17
 257               	.LVL8:
 258               	.L15:
 259               	/* epilogue start */
  90:usart.c       **** 	}
  91:usart.c       **** }
 260               		.loc 1 91 0
 261 00d6 DF91      		pop r29
 262 00d8 CF91      		pop r28
 263               	.LVL9:
 264 00da 1F91      		pop r17
 265 00dc 0895      		ret
 266               		.cfi_endproc
 267               	.LFE6:
 269               	.Letext0:
 270               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccH2z1Bi.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccH2z1Bi.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccH2z1Bi.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccH2z1Bi.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccH2z1Bi.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccH2z1Bi.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccH2z1Bi.s:13     .text:0000000000000000 usart_init_roomba
     /tmp/ccH2z1Bi.s:63     .text:000000000000003a send_byte_roomba
     /tmp/ccH2z1Bi.s:88     .text:000000000000004a receive_byte_roomba
     /tmp/ccH2z1Bi.s:113    .text:000000000000005a usart_init
     /tmp/ccH2z1Bi.s:162    .text:0000000000000094 send_byte
     /tmp/ccH2z1Bi.s:187    .text:00000000000000a4 receive_byte
     /tmp/ccH2z1Bi.s:212    .text:00000000000000b4 sendString

NO UNDEFINED SYMBOLS
